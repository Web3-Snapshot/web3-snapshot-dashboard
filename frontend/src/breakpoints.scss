@function media-query($key) {
  @return map-get($media, $key);
}

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

// Sass variables that define breakpoint values
$breakpoints: (
  ss: 400,
  xs: 600,
  sm: 900,
  md: 1200,
  lg: 1536,
);

// Sass variables for writing out media queries
//
//     Example usage with the above defined function `media-query`:
//     @media #{media-query(lg)} {
//       background-color: black;
//     }

$media: (
  ss: '(max-width: #{map-get($breakpoints, ss)}px)',
  xs:
    '(min-width: #{map-get($breakpoints, ss) + 1}px) and (max-width: #{map-get($breakpoints, xs)}px)',
  sm:
    '(min-width: #{map-get($breakpoints, xs) + 1}px) and (max-width: #{map-get($breakpoints, sm)}px)',
  md:
    '(min-width: #{map-get($breakpoints, sm) + 1}px) and (max-width: #{map-get($breakpoints, md)}px)',
  lg:
    '(min-width: #{map-get($breakpoints, md) + 1}px) and (max-width: #{map-get($breakpoints, lg)}px)',
  xl: '(min-width: #{map-get($breakpoints, lg) + 1}px)',
);

// The export module that makes Sass variables accessible in JavaScript
:export {
  // Media Queries
  ss: unquote(map-get($media, ss)); // '(max-width: 400px)'
  xs: unquote(map-get($media, xs)); // '(min-width: 401px) and (max-width: 600px)'
  sm: unquote(map-get($media, sm)); // etc.
  md: unquote(map-get($media, md));
  lg: unquote(map-get($media, lg));
  xl: unquote(map-get($media, xl));

  // Breakpoints
  ssBp: #{map-get($breakpoints, ss)}; // 400
  xsBp: #{map-get($breakpoints, xs)}; // 600
  smBp: #{map-get($breakpoints, sm)}; // etc.
  mdBp: #{map-get($breakpoints, md)};
  lgBp: #{map-get($breakpoints, lg)};
  xlBp: #{map-get($breakpoints, xl)};
}
